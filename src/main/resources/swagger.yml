swagger: "2.0"
info:
  description: "API para Gestão de locadora back - end."
  version: "1.0.0"
  title: "Locadora"
  termsOfService: "http://swagger.io/terms/"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

host: "localhost:8080"
basePath: "/api/locadora"

tags:
  - name: "filmes-controller"
    description: "Everything about your films"
  - name: "locacoes-controller"
    description: "tudo sobre locações"
  - name: "clientes-controller"
    description: "Operations about user"

schemes:
  - "https"

paths:
  /filmes:
    post:
      tags:
        - filmes-controller
      summary: Adicionar um novo filme
      operationId: adicionarFilme
      parameters:
        - in: body
          name: body
          description: filme post request
          required: true
          schema:
            $ref: '#/definitions/FilmePostRequest'

      responses:
        201:
          description: filme cadastrado com sucesso
        422:
          description: erro ao cadastrar o filme
          schema:
            type: array
            items:
              $ref: '#/definitions/ErrorResponse'

    get:
      tags:
        - filmes-controller
      summary: listar todos os filmes
      operationId: listarFilmes
      parameters:
        - in: query
          type: string
          name: genero
          description: genero do filme
        - in: query
          type: string
          name: diretor
          description: diretor do filme
        - in: query
          type: integer
          name: anoLancamento
          description: ano de lancamento do filme
        - in: query
          type: string
          name: status
          description: status do filme na locadora
          enum:
            - EM_ATRASO
            - ATIVO
            - DEVOLVIDO
            - RENOVADO
        - in: query
          type: string
          name: tipo
          description: Tipo do filme
          enum:
            - LANCAMENTO
            - COMUM

      responses:
        200:
          description: filmes buscados com sucesso
          schema:
            type: array
            items:
              $ref: '#/definitions/FilmeResponseModel'

  /filmes/{id}:
    get:
      tags:
        - filmes-controller
      summary: pegar filme por id
      operationId: pegarFilmeId
      parameters:
        - name: id
          in: path
          description: retorna o filme pela id
          required: true
          type: integer

      responses:
        200:
          description: filme buscado com sucesso
        422:
          description: erro ao buscar o filme
          schema:
            $ref: '#/definitions/FilmeResponseModel'

    put:
      tags:
        - filmes-controller
      summary: Atualizar um filme
      operationId: atualizarFilme
      parameters:
        - in: path
          type: string
          name: id
          description: id do filme
          required: true
        - in: body
          name: filmePutRequest
          description: filme put request
          required: true
          schema:
            $ref: '#/definitions/FilmePutRequest'

      responses:
        200:
          description: filme atualizado com sucesso
        422:
          description: erro ao atualizar o filme
          schema:
            type: array
            items:
              $ref: '#/definitions/ErrorResponse'

    delete:
      tags:
        - filmes-controller
      summary: deletar filme por id
      operationId: deletarFilmes
      parameters:
        - in: path
          type: string
          name: id
          description: id do filme
          required: true

      responses:
        200:
          description: filme deletado com sucesso
        422:
          description: erro ao deletar filme
          schema:
            type: array
            items:
              $ref: '#/definitions/ErrorResponse'

  /clientes:
    post:
      tags:
        - clientes-controller
      summary: adicionar um novo cliente
      operationId: adiconarCliente
      consumes:
        - application.json
      produces:
        - application.json
      parameters:
        - in: body
          name: body
          description: objeto de cliente que precisa ser adicionado
          required: true
          schema:
            $ref: "#/definitions/ClientePostRequest"

      responses:
        201:
          description: cliente cadastrado com sucesso
        422:
          description: erro ao cadastrar o cliente
          schema:
            type: array
            items:
              $ref: '#/definitions/ErrorResponse'

    get:
      tags:
        - clientes-controller
      summary: listar todos os cliente
      operationId: listarClientes
      parameters:
        - in: query
          type: string
          name: nome
          description: nome do cliente
        - in: query
          type: string
          name: cpf
          description: cpf do cliente
        - in: query
          type: string
          name: telefone
          description: telefone do cliente
        - in: query
          type: string
          name: email
          description: email do cliente
        - in: query
          type: string
          name: sexo
          description: genero do cliente
          enum:
            - MASCULINO
            - FEMININO

      responses:
        200:
          description: clientes buscados com sucesso
          schema:
            type: array
            items:
              $ref: '#/definitions/ClienteResponseModel'

  /clientes/{id}:
    get:
      tags:
        - clientes-controller
      summary: pegar cliente por id
      operationId: pegarClienteId
      parameters:
        - name: id
          in: path
          description: retorna o cliente pela id
          required: true
          type: integer

      responses:
        200:
          description: cliente buscado com sucesso
        422:
          description: erro ao buscar o cliente
          schema:
            $ref: '#/definitions/ClienteResponseModel'

    put:
      tags:
        - clientes-controller
      summary: atualiza um cliente
      operationId: atualizarCliente
      parameters:
        - in: path
          type: string
          name: id
          description: id do cliente
          required: true
        - in: body
          name: clientePutRequest
          description: cliente put request
          required: true
          schema:
            $ref: '#/definitions/ClientePutRequest'

      responses:
        200:
          description: cliente atualizado com sucesso
        422:
          description: erro ao atualizar o cliente
          schema:
            type: array
            items:
              $ref: '#/definitions/ErrorResponse'

    delete:
      tags:
        - clientes-controller
      summary: deletar cliente por id
      operationId: deletarClientes
      parameters:
        - in: path
          type: string
          name: id
          description: id do cliente
          required: true

      responses:
        200:
          description: cliente deletado com sucesso
        422:
          description: erro ao deletar cliente
          schema:
            type: array
            items:
              $ref: '#/definitions/ErrorResponse'

  /locacoes:
    post:
      tags:
        - locacoes-controller
      summary: adicionar uma nova locacao
      operationId: adiconarLocacao
      consumes:
        - application.json
      produces:
        - application.json
      parameters:
        - in: body
          name: body
          description: objeto de locacao que precisa ser adicionado
          required: true
          schema:
            $ref: "#/definitions/LocacaoPostRequest"

      responses:
        201:
          description: locacao efetuada com sucesso
        422:
          description: erro ao efetuar uma locacao
          schema:
            type: array
            items:
              $ref: '#/definitions/ErrorResponse'

    get:
      tags:
        - locacoes-controller
      summary: listar todas as locacoes
      operationId: listarLocacoes
      parameters:
        - in: query
          type: integer
          name: idLocacaoPrincipal
          description: id principal da locacao
        - in: query
          type: string
          name: filme
          description: objeto filme
        - in: query
          type: string
          name: cliente
          description: objeto cliente
        - in: query
          type: string
          name: dtLocacao
          description: data da locacao
        - in: query
          type: string
          name: dtDevolucao
          description: data da devolucao
        - in: query
          type: string
          name: statusLocacao
          description: status da locacao
          enum:
            - EM_ATRASO
            - ATIVO
            - DEVOLVIDO
            - RENOVADO

      responses:
        200:
          description: clientes buscados com sucesso
          schema:
            type: array
            items:
              $ref: '#/definitions/LocacaoResponseModel'

  /locacoes/{id}:
    get:
      tags:
        - locacoes-controller
      summary: pegar a locacao por id
      operationId: pegarLocacaoId
      parameters:
        - name: id
          in: path
          description: retorna a locacao por id
          required: true
          type: integer

      responses:
        200:
          description: locacao buscada com sucesso
        422:
          description: erro ao buscar a locacao
          schema:
            $ref: '#/definitions/LocacaoResponseModel'

    put:
      tags:
        - locacoes-controller
      summary: atualiza uma locacao
      operationId: atualizarLocacao
      parameters:
        - in: path
          type: string
          name: id
          description: id da locacao
          required: true
        - in: body
          name: locacoesPutRequest
          description: locacao put request
          required: true
          schema:
            $ref: '#/definitions/LocacoesPutRequest'

      responses:
        200:
          description: cliente atualizado com sucesso
        422:
          description: erro ao atualizar o cliente
          schema:
            type: array
            items:
              $ref: '#/definitions/ErrorResponse'

    delete:
      tags:
        - locacoes-controller
      summary: deletar uma locacao po id
      operationId: deletarLocacoes
      parameters:
        - in: path
          type: string
          name: id
          description: id da locacao
          required: true

      responses:
        200:
          description: locacao deletada com sucesso
        422:
          description: erro ao deletar a locacao
          schema:
            type: array
            items:
              $ref: '#/definitions/ErrorResponse'

  /locacoes/{idLocacaoPrincipal}/renovacoes:
    get:
      tags:
        - locacoes-controller
      summary: listar todas as renovações
      operationId: listarRenovacoes
      parameters:
        - name: idLocacaoPrincipal
          in: path
          description: buscar a lista de filmes renovados pelo filtro renovacoes
          required: true
          type: array
          items:
            type: string
            enum:
              - RENOVADO

      responses:
        200:
          description: lista encontrada
        422:
          description: lista não pode ser encontrada
          schema:
            $ref: '#/definitions/LocacaoResponseModel'

definitions:
  FilmePostRequest:
    type: object
    required:
      - nome
      - diretor
      - anoLancamento
      - isLancamento
      - qtdVolumesDisponiveis
      - generoFilme
    properties:
      nome:
        type: string
        description: nome do filme
        example: titanic
      diretor:
        type: string
        description: nome do diretor
        example: liminha
      anoLancamento:
        type: integer
        description: ano lançamento do filme
        example: 2003
      isLancamento:
        type: boolean
        description: flag que informa se o filme é lancamento
        example: true
      qtdVolumesDisponiveis:
        type: integer
        description: numero de volumes disponiveis na loja
        example: 2
      generoFilme:
        type: string
        description: genero do filme
        enum: [ ACAO, AVENTURA, COMEDIA, DANCA, DOCUMENTARIO, DRAMA, FANTASIA, FAROESTE, FICCAO_CIENTIFICA,
                MUSICAL, FILME_POLICIAL, SUSPENSE, TERROR ]

  FilmePutRequest:
    type: object
    properties:
      nome:
        type: string
        description: nome do filme
        example: titanic
      diretor:
        type: string
        description: nome do diretor
        example: liminha
      anoLancamento:
        type: integer
        description: ano lançamento do filme
        example: 2003
      isLancamento:
        type: boolean
        description: flag que informa se o filme é lancamento
        example: true
      qtdVolumesDisponiveis:
        type: integer
        description: numero de volumes disponiveis na loja
        example: 2
      generoFilme:
        type: string
        description: genero do filme
        enum: [ ACAO, AVENTURA, COMEDIA, DANCA, DOCUMENTARIO, DRAMA, FANTASIA, FAROESTE, FICCAO_CIENTIFICA,
                MUSICAL, FILME_POLICIAL, SUSPENSE, TERROR ]

  FilmeResponseModel:
    type: object
    properties:
      id:
        type: integer
        description: id do filme
        example: 10
      nome:
        type: string
        description: nome do filme
        example: titanic
      diretor:
        type: string
        description: nome do diretor
        example: liminha
      anoLancamento:
        type: integer
        description: ano lançamento do filme
        example: 2003
      isLancamento:
        type: boolean
        description: flag que informa se o filme é lancamento
        example: true
      qtdVolumesDisponiveis:
        type: integer
        description: numero de volumes disponiveis na loja
        example: 2
      generoFilme:
        type: string
        description: genero do filme
        enum: [ ACAO, AVENTURA, COMEDIA, DANCA, DOCUMENTARIO, DRAMA, FANTASIA, FAROESTE, FICCAO_CIENTIFICA,
                MUSICAL, FILME_POLICIAL, SUSPENSE, TERROR ]

  ClientePostRequest:
    type: object
    required:
      - nome
      - cpf
      - telefone
      - email
      - sexo
    properties:
      nome:
        type: string
        description: nome do cliente
        example: Jurandir
      cpf:
        type: string
        description: cpf do cliente
        example: 12365498700
      telefone:
        type: string
        description: telefone do cliente
        example: 345212345
      email:
        type: string
        description: email do cliente
        example: jurandir@ig.com.br
      sexo:
        type: string
        description: genero do cliente
        enum: [ MASCULINO, FEMININO ]

  ClienteResponseModel:
    type: object
    properties:
      id:
        type: integer
        description: id do cliente
        example: 10
      nome:
        type: string
        description: nome do cliente
        example: Jurandir Barbosa
      cpf:
        type: string
        description: cpf do cliente
        example: 14785236900
      telefone:
        type: string
        description: telefone do cliente
        example: 34529632
      email:
        type: string
        description: email do cliente
        example: jurandirbarbosa@ig.com.br
      sexo:
        type: string
        description: genero do cliente
        enum: [ MASCULINO, FEMININO ]

  ClientePutRequest:
    type: object
    properties:
      nome:
        type: string
        description: nome do cliente
        example: Jurandir
      cpf:
        type: string
        description: cpf do cliente
        example: 12365478977
      telefone:
        type: string
        description: telefone do cliente
        example: 34521254
      email:
        type: string
        description: email do cliente
        example: jurandir@ig.com.br
      sexo:
        type: string
        description: genero do cliente
        enum: [ MASCULINO, FEMININO ]

  LocacaoPostRequest:
    type: object
    required:
      - idLocacaoPrincipal
      - filme
      - cliente
      - dtLocacao
      - dtDevolucao
      - statusLocacao
    properties:
      idLocacaoPrincipal:
        type: integer
        description: id principal da locacao
        example: 12354
      filme:
        type: object
        description: nome do filme a ser locado
        example: titanic
      cliente:
        type: object
        description: nome do cliente que está locando o filme
        example: Jurandir
      dtLocacao:
        type: string
        description: data da locacao
        example: 10/10/2010
      dtDevolucao:
        type: string
        description: data da devolucao
        example: 10/10/2010
      statusLocacao:
        type: string
        description: status da locacao
        enum: [ EM_ATRASO, ATIVO, DEVOLVIDO, RENOVADO ]

  LocacaoResponseModel:
    type: object
    properties:
      id:
        type: integer
        description: id da locacao
        example: 10
      idLocacaoPrincipal:
        type: integer
        description: id principal da locacao
        example: 101010
      filme:
        type: object
        description: objeto filme
        example: titanic
      cliente:
        type: object
        description: objeto cliente
        example: Jurandir
      dtLocacao:
        type: string
        description: data da locacao
        example: 10/10/10
      dtDevolucao:
        type: string
        description: data da devolucao
        example: 10/10/10
      statusLocacao:
        type: string
        description: status do filme
        enum: [ EM_ATRASO, ATIVO, DEVOLVIDO, RENOVADO ]
      locacoes:
        type: array
        items:
          type: string

  LocacoesPutRequest:
    type: object
    properties:
      idLocacaoPrincipal:
        type: integer
        description: id principal da locacao
        example: 123
      filme:
        type: object
        description: objeto de filme
        example: titanic
      cliente:
        type: object
        description: objeto de cliente
        example: Jurandir
      dtLocacao:
        type: string
        description: data da locacao
        example: 10/10/01
      dtDevolucao:
        type: string
        description: data da devolucao
        example: 10/10/01
      statusLocacao:
        type: string
        description: status do filme
        enum: [ EM_ATRASO, ATIVO, DEVOLVIDO, RENOVADO ]


  ErrorResponse:
    type: object
    properties:
      codigo:
        type: string
        description: codigo do erro
      mensagem:
        type: string
        description: mensagem do erro
      mensagemDetalhe:
        type: string
        description: detalhamento do erro
